education:
  - institution: University of Alberta
    location: Edmonton, Alberta, Canada
    program: BSc. Specialization in Computing Science
    in_progress: yes
    time: { start: 2010, end: Winter 2015}

experience:
  - title: Lead Developer, Research Assistant
    employer: Eleni Stroulia, Patrick von Hauff
    time: May 2015—Current
    responsibilities:
      - Collaborate intensively with colleagues in Medicine on a virtual
        patient simulation platform.
      - Research, evaluate, and integrate medical ontologies.
      - Write a web application using PHP, JavaScript, Neo4j and MongoDB.
      - Support and maintain a legacy PHP web application.

  - title: Teaching assistant, SCI 100
    employer: University of Alberta
    time: 2012-2014
    responsibilities:
      - Assist students learning Python as their first programming language.
      - Evaluate student coursework.

  - title: Lead Developer/Research Assistant
    employer: >
      "Cultr":http://cultr.business.ualberta.ca
    time: 2013-2014
    responsibilities:
      - Write a robust and versatile web crawling service using a variety of
        technologies including [Scrapy](http://scrapy.org/), and
        [PhantomJS](http://phantomjs.org/) duck-taped together using an Erlang
        load-balancer and [Redis](http://redis.io/).
      - Patch a memory leak in an open source library ([MongoDB Erlang
        Driver](https://github.com/eddieantonio/mongodb-erlang)) used in a
        server program.

skills:
  languages:
    # "Tier 1" -- the languages that I spend a bunch of time programming.
    - [Python, JavaScript (ECMAScript 2015), C, Java, Erlang]
    # "Tier 2" -- I don't program these often as often as the others but can
    # just "pick 'em up" and start programming.
    - [PHP, Ruby, Scala, Perl, C#, Scheme, C++11, Common Lisp, Go, 6502 Assembly]
    # Less useful, or far less proficient; I don't really program them often
    # or haven't recently, but I have intimate knowledge of 'em because I'm a
    # freak.
    - [Haskell, MIPS assembly, Pascal, Smalltalk-80, Eiffel]

  small_categories:
    Databases: [MySQL, SQLite3, Oracle SQL, MongoDB, Redis, Neo4j]

    HTML Template Languages:
      - '"React/JSX":https://facebook.github.io/react/'
      - '"Jade":http://jade-lang.com/'
      - '"Django":https://docs.djangoproject.com/en/dev/topics/templates/'
      - '"Handlebars":http://handlebarsjs.com/'

    CSS Preprocessors:
      - '"Less":http://lesscss.org/'

    Miscellaneous:
     - '"Puppet Configuration Management":http://puppetlabs.com/'
     - '"Vagrant":http://www.vagrantup.com/'

hobbies:
  - title: >
      "Gamboge—Predictive code input":https://github.com/eddieantonio/atom-gamboge
    description: >
      A multi-token code suggestion engine written for the [Atom][] text editor.
      It uses an _n_-gram language model to predict several code tokens ahead
      of the cursor.


      [Atom]: http://atom.io/

  - title: >
      "Waterbear—Visual Programming Language":https://github.com/waterbearlang/waterbear
    description:
      Rewrote the execution model of this imperative visual "block"
      programming language such that each thread would have an explicit,
      re-entrant call stack. This enabled writing common debugging features.
